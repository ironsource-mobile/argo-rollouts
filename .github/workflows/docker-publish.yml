name: Docker

on:
  push:
    branches:
      - master
      - release-*
  # Run tests for any PRs.
  pull_request:

jobs:
  release-images:
    runs-on: [general, prod]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          role-duration-seconds: 3600
          role-to-assume: general-prod-01-github-actions

      - name: Login to ECR
        if: github.event_name != 'pull_request'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1


      - name: Docker meta (controller)
        id: controller-meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ steps.login-ecr.outputs.registry }}/argo-rollouts-controller
          tags: |
            type=ref,event=branch
          flavor: |
            latest=${{ github.ref == 'refs/heads/master' }}

      - name: Docker meta (plugin)
        id: plugin-meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ steps.login-ecr.outputs.registry }}/kubectl-argo-rollouts
          tags: |
            type=ref,event=branch
          flavor: |
            latest=${{ github.ref == 'refs/heads/master' }}


      # avoid building linux/arm64 for PRs since it takes so long
      - name: Set Platform Matrix
        id: platform-matrix
        run: |
          PLATFORM_MATRIX=linux/amd64
          if [ ${{ github.event_name != 'pull_request' }} = true ]; then
            PLATFORM_MATRIX=$PLATFORM_MATRIX,linux/arm64
          fi
          echo "::set-output name=platform-matrix::$PLATFORM_MATRIX"

      - name: Build and push (controller-image)
        uses: docker/build-push-action@v2
        with:
          platforms: ${{ steps.platform-matrix.outputs.platform-matrix }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.controller-meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          registry: ${{ steps.login-ecr.outputs.registry }}
          repository: argo-rollouts-controller
          add_git_labels: true
          tag_with_ref: true

      - name: Build and push (plugin-image)
        uses: docker/build-push-action@v2
        with:
          platforms: ${{ steps.platform-matrix.outputs.platform-matrix }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.plugin-meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          context: .
          target: kubectl-argo-rollouts

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
